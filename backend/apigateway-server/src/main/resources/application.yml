
server:
  port: 8000

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: apigateway-service

  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
#            allowedOrigins: "*"
            allowed-origin-patterns: "*"
            allow-credentials: true   #추가
            allowedHeaders:
              - x-requested-with
              - authorization
              - content-type
              - credential
              - X-AUTH-TOKEN
              - X-CSRF-TOKEN
              - memberId
            allowedMethods:
              - POST
              - GET
              - PUT
              - OPTIONS
              - DELETE
              - PATCH
        add-to-simple-url-handler-mapping: true

      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
      routes:
        - id: member-service
          uri: lb://MEMBER-SERVICE
          predicates:
            - Path=/member-service/oauth2/**
            - Method=GET
          filters:
#            - RemoveRequestHeader=Cookie
            - RewritePath=/member-service/(?<segment>.*), /$\{segment}
#            - RemoveResponseHeader= Access-Control-Allow-Origin
        - id: member-service
          uri: lb://MEMBER-SERVICE
          predicates:
            - Path=/member-service/actuator/**
            - Method=GET, POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/member-service/(?<segment>.*), /$\{segment}

        - id: member-service
          uri: lb://MEMBER-SERVICE
          predicates:
            - Path=/member-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/member-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter

        - id: achievement-service
          uri: lb://ACHIEVEMENT-SERVICE
          predicates:
            - Path=/achievement-service/actuator/**
            - Method=GET, POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/achievement-service/(?<segment>.*), /$\{segment}

        - id: achievement-service
          uri: lb://ACHIEVEMENT-SERVICE
          predicates:
            - Path=/achievement-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/achievement-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter

        - id: challenge-service
          uri: lb://CHALLENGE-SERVICE
          predicates:
            - Path=/challenge-service/actuator/**
            - Method=GET, POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/challenge-service/(?<segment>.*), /$\{segment}

        - id: challenge-service
          uri: lb://CHALLENGE-SERVICE
          predicates:
            - Path=/challenge-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/challenge-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter

        - id: plogging-service
          uri: lb://PLOGGING-SERVICE
          predicates:
            - Path=/plogging-service/actuator/**
            - Method=GET, POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/plogging-service/(?<segment>.*), /$\{segment}

        - id: plogging-service
          uri: lb://PLOGGING-SERVICE
          predicates:
            - Path=/plogging-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/plogging-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter

#        - id: user-service
#          uri: lb://USER-SERVICE
#          predicates:
#            - Path=/user-service/**
#            - Method=GET
#          filters:
#            - RemoveRequestHeader=Cookie
#            - RewritePath=/user-service/(?<segment>.*), /$\{segment}



token:
  # 일단 하루
  expiration_time: 86400000
  secret: secretcode
  refresh-cookie-key: refresh